{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _hotelsDesignDic,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gilad\\\\Desktop\\\\Bridgify\\\\BridgifyAsg\\\\pages\\\\index.tsx\";\n\nvar __jsx = React.createElement;\n//----->react & next\nimport React from 'react';\nimport Head from \"next/head\"; //----->in-app components & styles\n\nimport Attraction from '../components/Attraction'; // import styles from './index.module.css'can\n\nvar hotelsDesignDic = (_hotelsDesignDic = {}, _defineProperty(_hotelsDesignDic, 'default', {\n  titleSize: '1em',\n  titleColor: 'black'\n}), _defineProperty(_hotelsDesignDic, 'hilton', {\n  titleSize: '1em',\n  titleColor: 'pink'\n}), _defineProperty(_hotelsDesignDic, 'royal', {\n  titleSize: '0.8em',\n  titleColor: 'green'\n}), _hotelsDesignDic);\n// https://developers.google.com/maps/documentation/javascript/places\n// The Places service is a self-contained library, separate from the main Maps JavaScript API code. \n// To use the functionality contained within this library, you must first load it using the libraries parameter in the Maps API bootstrap URL\nvar googleKey = 'AIzaSyBPWFwHrsgzYw36bl-ecghaFEqNuRuGDUg';\nvar googleScript = \"https://maps.googleapis.com/maps/api/js?key=\".concat(googleKey, \"&libraries=places\");\n\nvar Home = function Home(_ref) {\n  var resultsData = _ref.resultsData,\n      hotel = _ref.hotel;\n  // let resultsData =  require('../data/resultsFromAPI.json')['results']\n  console.log(resultsData);\n  var chosenHotel = hotel ? hotel : 'default';\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '2em',\n      fontFamily: 'Monospace'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, \"Bridgify\"), __jsx(\"script\", {\n    defer: true,\n    src: googleScript,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  })), __jsx(\"h1\", {\n    style: {\n      color: 'purple',\n      paddingBottom: '0.5em',\n      fontSize: '3em'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }, \"Bridgify!\"), __jsx(\"div\", {\n    style: {\n      placeContent: 'center',\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, resultsData.map(function (attr, index) {\n    return __jsx(Attraction, {\n      key: attr.place_id,\n      name: attr.name,\n      number_of_reviews: attr.user_ratings_total,\n      rating: attr.rating,\n      tags: attr.types,\n      imgUrl: attr.photos ? attr.photos[0] ? attr.photos[0].photo_reference : null : null,\n      titleSize: hotelsDesignDic[chosenHotel].titleSize,\n      titleColor: hotelsDesignDic[chosenHotel].titleColor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    });\n  }))));\n};\n\n_c = Home;\nexport var __N_SSG = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/gilad/Desktop/Bridgify/BridgifyAsg/pages/index.tsx"],"names":["React","Head","Attraction","hotelsDesignDic","titleSize","titleColor","googleKey","googleScript","Home","resultsData","hotel","console","log","chosenHotel","textAlign","padding","fontFamily","color","paddingBottom","fontSize","placeContent","display","flexWrap","map","attr","index","place_id","name","user_ratings_total","rating","types","photos","photo_reference"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,MAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,WAAjB,C,CAGA;;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;;AASA,IAAMC,eAA+C,6DACnD,SADmD,EACvC;AACZC,EAAAA,SAAS,EAAE,KADC;AAEZC,EAAAA,UAAU,EAAE;AAFA,CADuC,qCAKnD,QALmD,EAKxC;AACXD,EAAAA,SAAS,EAAE,KADA;AAEXC,EAAAA,UAAU,EAAE;AAFD,CALwC,qCASnD,OATmD,EASzC;AACVD,EAAAA,SAAS,EAAE,OADD;AAEVC,EAAAA,UAAU,EAAE;AAFF,CATyC,oBAArD;AAoBA;AACA;AACA;AAEA,IAAMC,SAAS,GAAG,yCAAlB;AACA,IAAMC,YAAY,yDAAkDD,SAAlD,sBAAlB;;AA6BA,IAAME,IAAI,GAAG,SAAPA,IAAO,OAAmC;AAAA,MAAhCC,WAAgC,QAAhCA,WAAgC;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAC/C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEA,MAAMI,WAAW,GAAGH,KAAK,GAAGA,KAAH,GAAW,SAApC;AACA,SAAO,4BACN;AAAK,IAAA,KAAK,EAAE;AAAEI,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,OAAO,EAAE,KAAhC;AAAuCC,MAAAA,UAAU,EAAE;AAAnD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEC;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,GAAG,EAAET,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,EAKC;AAAI,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,aAAa,EAAE,OAAlC;AAA2CC,MAAAA,QAAQ,EAAE;AAArD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALD,EAMC;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE,QAAhB;AAA0BC,MAAAA,OAAO,EAAE,MAAnC;AAA2CC,MAAAA,QAAQ,EAAE;AAArD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEb,WAAW,CAACc,GAAZ,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACjC,WAAO,MAAC,UAAD;AACN,MAAA,GAAG,EAAED,IAAI,CAACE,QADJ;AAEN,MAAA,IAAI,EAAEF,IAAI,CAACG,IAFL;AAGN,MAAA,iBAAiB,EAAEH,IAAI,CAACI,kBAHlB;AAIN,MAAA,MAAM,EAAEJ,IAAI,CAACK,MAJP;AAKN,MAAA,IAAI,EAAEL,IAAI,CAACM,KALL;AAMN,MAAA,MAAM,EAAEN,IAAI,CAACO,MAAL,GAAcP,IAAI,CAACO,MAAL,CAAY,CAAZ,IAAiBP,IAAI,CAACO,MAAL,CAAY,CAAZ,EAAeC,eAAhC,GAAkD,IAAhE,GAAuE,IANzE;AAON,MAAA,SAAS,EAAE7B,eAAe,CAACU,WAAD,CAAf,CAA6BT,SAPlC;AAQN,MAAA,UAAU,EAAED,eAAe,CAACU,WAAD,CAAf,CAA6BR,UARnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAUA,GAXA,CADF,CAND,CADM,CAAP;AAuBA,CA5BD;;KAAMG,I;;AA8BN,eAAeA,IAAf","sourcesContent":["//----->react & next\r\nimport React, { useState } from 'react';\r\n\r\nimport Head from \"next/head\";\r\n\r\n\r\n//----->in-app components & styles\r\nimport Attraction from '../components/Attraction'\r\n// import styles from './index.module.css'can\r\nimport { attrResult } from '../interfaces/'\r\nimport { GetStaticProps } from 'next';\r\n\r\ntype designProps = {\r\n\ttitleSize: string,\r\n\ttitleColor: string\r\n}\r\n\r\nconst hotelsDesignDic: { [key: string]: designProps } = {\r\n\t['default']: {\r\n\t\ttitleSize: '1em',\r\n\t\ttitleColor: 'black'\r\n\t},\r\n\t['hilton']: {\r\n\t\ttitleSize: '1em',\r\n\t\ttitleColor: 'pink'\r\n\t},\r\n\t['royal']: {\r\n\t\ttitleSize: '0.8em',\r\n\t\ttitleColor: 'green'\r\n\t}\r\n};\r\n\r\ntype Props = {\r\n\thotel?: string\r\n\tresultsData?: any\r\n}\r\n\r\n// https://developers.google.com/maps/documentation/javascript/places\r\n// The Places service is a self-contained library, separate from the main Maps JavaScript API code. \r\n// To use the functionality contained within this library, you must first load it using the libraries parameter in the Maps API bootstrap URL\r\n\r\nconst googleKey = 'AIzaSyBPWFwHrsgzYw36bl-ecghaFEqNuRuGDUg'\r\nconst googleScript = `https://maps.googleapis.com/maps/api/js?key=${googleKey}&libraries=places`\r\nconst googleURL = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?`\r\n\r\nconst paramsAsObject = {\r\n\tlocation: '32.0715658,34.772792',\r\n\tradius:'1500',\r\n\ttype:'bars',\r\n\tkey:googleKey\r\n}\r\n//create params string from the req object\r\nconst paramsAsString = Object.entries(paramsAsObject).map(([key, val]) => `${key}=${val}`).join('&')\r\n\r\n// This function gets called at build time on server-side.\r\nexport const getStaticProps: GetStaticProps = async () => {\r\n\t// Call an external API endpoint to get posts.\r\n\tconst res = await fetch(googleURL + paramsAsString)\r\n\tlet data = await res.json()\r\n\tconst resultsData: attrResult[] = data['results']\r\n\tconsole.log(resultsData);\r\n\t\r\n\t// 'Home' component will receive resultsData as a prop by returning it\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tresultsData\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nconst Home = ({ resultsData, hotel }: Props) => {\r\n\t// let resultsData =  require('../data/resultsFromAPI.json')['results']\r\n\tconsole.log(resultsData);\r\n\r\n\tconst chosenHotel = hotel ? hotel : 'default'\r\n\treturn <>\r\n\t\t<div style={{ textAlign: 'center', padding: '2em', fontFamily: 'Monospace' }}>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>Bridgify</title>\r\n\t\t\t\t<script defer src={googleScript} />\r\n\t\t\t</Head>\r\n\t\t\t<h1 style={{ color: 'purple', paddingBottom: '0.5em', fontSize: '3em' }}>Bridgify!</h1>\r\n\t\t\t<div style={{ placeContent: 'center', display: 'flex', flexWrap: 'wrap' }}>\r\n\t\t\t\t{resultsData.map((attr, index) => {\r\n\t\t\t\t\treturn <Attraction\r\n\t\t\t\t\t\tkey={attr.place_id}\r\n\t\t\t\t\t\tname={attr.name}\r\n\t\t\t\t\t\tnumber_of_reviews={attr.user_ratings_total}\r\n\t\t\t\t\t\trating={attr.rating}\r\n\t\t\t\t\t\ttags={attr.types}\r\n\t\t\t\t\t\timgUrl={attr.photos ? attr.photos[0] ? attr.photos[0].photo_reference : null : null}\r\n\t\t\t\t\t\ttitleSize={hotelsDesignDic[chosenHotel].titleSize}\r\n\t\t\t\t\t\ttitleColor={hotelsDesignDic[chosenHotel].titleColor}\r\n\t\t\t\t\t></Attraction>\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</>\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}