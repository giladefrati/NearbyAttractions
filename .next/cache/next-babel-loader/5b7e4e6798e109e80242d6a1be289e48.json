{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _hotelsDesignDic,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gilad\\\\Desktop\\\\Bridgify\\\\BridgifyAsg\\\\pages\\\\index.tsx\";\n\nvar __jsx = React.createElement;\n//----->react & next\nimport React from 'react';\nimport Head from \"next/head\";\n//----->in-app components & styles\nimport Attraction from '../components/Attraction'; // import styles from './index.module.css'can\n\nvar hotelsDesignDic = (_hotelsDesignDic = {}, _defineProperty(_hotelsDesignDic, 'default', {\n  titleSize: '1em',\n  titleColor: 'black'\n}), _defineProperty(_hotelsDesignDic, 'hilton', {\n  titleSize: '1em',\n  titleColor: 'pink'\n}), _defineProperty(_hotelsDesignDic, 'royal', {\n  titleSize: '0.8em',\n  titleColor: 'green'\n}), _hotelsDesignDic);\n\n/*global google*/\n// declare var google: any;\n// https://developers.google.com/maps/documentation/javascript/places\n// The Places service is a self-contained library, separate from the main Maps JavaScript API code. \n// To use the functionality contained within this library, you must first load it using the libraries parameter in the Maps API bootstrap URL:\nvar googleKey = 'AIzaSyBPWFwHrsgzYw36bl-ecghaFEqNuRuGDUg';\nvar googleScript = \"https://maps.googleapis.com/maps/api/js?key=\".concat(googleKey, \"&libraries=places&callback=initMap\");\n\nvar Home = function Home(Props) {\n  // let request = {\n  // \tlocation: new google.maps.LatLng(52.48, -1.89),\n  // \tradius: '500',\n  // \ttypes: ['attractions']\n  // };\n  // var container = document.getElementById('results');\n  // var service = new google.maps.places.PlacesService(container);\n  // service.nearbySearch(request, callback);\n  // function callback(results, status) {\n  // \tif (status == google.maps.places.PlacesServiceStatus.OK) {\n  // \t\tfor (var i = 0; i < results.length; i++) {\n  // \t\t\tcontainer.innerHTML += results[i].name + '<br />';\n  // \t\t}\n  // \t}\n  // }\n  // ___________________________________________________________________________\n  var resultsData;\n  var googleURL = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=32.0715658,34.772792&radius=1500&type=bars&key=AIzaSyBPWFwHrsgzYw36bl-ecghaFEqNuRuGDUg'; // TO OVERCOME CORS ERROR using some tool---> https://proxyurl/googleURL \n\n  var proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n  fetch(proxyurl + googleURL).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return resultsData = data['results'];\n  });\n\n  var attractionsData = require('../data/attractions_museums_tlv.json'); // const resultsData: attrResult[] = require('../data/resultsFromAPI.json')['results']\n\n\n  var chosenHotel = Props.hotel ? Props.hotel : 'default';\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '2em',\n      fontFamily: 'Monospace'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, \"Bridgify\"), __jsx(\"script\", {\n    defer: true,\n    src: googleScript,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  })), __jsx(\"h1\", {\n    style: {\n      color: 'purple',\n      paddingBottom: '0.5em',\n      fontSize: '3em'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }\n  }, \"Bridgify!\"), __jsx(\"div\", {\n    style: {\n      placeContent: 'center',\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }\n  }, resultsData.map(function (attr, index) {\n    console.log(index);\n    return __jsx(Attraction, {\n      key: attr.place_id,\n      name: attr.name,\n      number_of_reviews: attr.user_ratings_total,\n      rating: attr.rating,\n      tags: attr.types,\n      imgUrl: attr.photos ? attr.photos[0] ? attr.photos[0].photo_reference : null : null,\n      titleSize: hotelsDesignDic[chosenHotel].titleSize,\n      titleColor: hotelsDesignDic[chosenHotel].titleColor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    });\n  }))));\n}; // return <>\n// \t<div style={{ textAlign: 'center', padding: '2em', fontFamily: 'Monospace' }}>\n// \t\t<Head>\n// \t\t\t<title>Bridgify</title>\n// \t\t\t<script defer src={googleScript}/>\n// \t\t</Head>\n// \t\t\t<h1 style={{ color: 'purple', paddingBottom: '0.5em', fontSize: '3em' }}>Bridgify!</h1>\n// \t\t\t<div style={{ placeContent: 'center', display: 'flex', flexWrap: 'wrap' }}>\n// \t\t\t\t{attractionsData.map(attr =>\n// \t\t\t\t\t<Attraction\n// \t\t\t\t\t\tkey={attr.id}\n// \t\t\t\t\t\tname={attr.name}\n// \t\t\t\t\t\tnumber_of_reviews={attr.number_of_reviews}\n// \t\t\t\t\t\trating={attr.rating}\n// \t\t\t\t\t\ttags={attr.tags}\n// \t\t\t\t\t\timgUrl={attr.main_photo_url}\n// \t\t\t\t\t\ttitleSize={hotelsDesignDic[chosenHotel].titleSize}\n// \t\t\t\t\t\ttitleColor={hotelsDesignDic[chosenHotel].titleColor}\n// \t\t\t\t\t></Attraction>)}\n// \t\t\t</div>\n// \t</div>\n// </>\n\n\n_c = Home;\nexport default Home; // __=---------------------------------------------------------------------------------\n// Google Places search API call\n// https://stackoverflow.com/questions/37874018/retrieve-points-of-interests-attractions-tourist-places-of-a-place-country-usi\n// https://maps.googleapis.com/maps/api/place/textsearch/json?query=new+york+city+point+of+interest&language=en&key=AIzaSyATrA8jcd0kjYz7cv-hjACyq10r3MMhe7A\n// __=---------------------------------------------------------------------------------\n// example of more readable in-line styles using objects\n// const inlineStylesWithObject :React.CSSProperties = { placeContent: 'center', display: 'flex', flexWrap: 'wrap' }\n// __=---------------------------------------------------------------------------------\n// with css modules styles\n// <div className={styles.body}>\n// \t\t<h1 className={styles.mainTitle}>Bridgify!</h1>\n// \t\t<Link href=\"/attractions/ski\"><a> Go Ski!</a></Link>\n// \t\t{/* Using bootstrap card's attributes, while sending the following props */}\n// \t\t<CardGroup className={styles.cardGroup}>\n// \t\t\t{attractionsData.map(attr =>\n// \t\t\t\t<Attraction\n// \t\t\t\t\tkey={attr.id}\n// \t\t\t\t\tname={attr.name}\n// \t\t\t\t\tnumber_of_reviews={attr.number_of_reviews}\n// \t\t\t\t\trating={attr.rating}\n// \t\t\t\t\ttags={attr.tags}\n// \t\t\t\t\timgUrl={attr.main_photo_url}\n// \t\t\t\t></Attraction>)}\n// \t\t</CardGroup>\n// \t</div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/gilad/Desktop/Bridgify/BridgifyAsg/pages/index.tsx"],"names":["React","Head","Attraction","hotelsDesignDic","titleSize","titleColor","googleKey","googleScript","Home","Props","resultsData","googleURL","proxyurl","fetch","then","response","json","data","attractionsData","require","chosenHotel","hotel","textAlign","padding","fontFamily","color","paddingBottom","fontSize","placeContent","display","flexWrap","map","attr","index","console","log","place_id","name","user_ratings_total","rating","types","photos","photo_reference"],"mappings":"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","sourcesContent":["//----->react & next\r\nimport React from 'react'\r\nimport Head from \"next/head\";\r\nimport Link from 'next/link'\r\n\r\n//----->in-app components & styles\r\nimport Attraction from '../components/Attraction'\r\n// import styles from './index.module.css'can\r\nimport { attr, attrResult } from '../interfaces/'\r\n\r\n// export async function getStaticProps() {\r\n// \t// Get external data from the file system, API, DB, etc.\r\n// \tconst attractionsData: attr[] = require('../data/attractions_museums_tlv.json')\r\n// \t// The value of the `props` key will be passed to the `Home` component\r\n// \treturn {\r\n// \t\tprops: { attractionsData }\r\n// \t}\r\n// }\r\n\r\n\r\ntype designProps = {\r\n\ttitleSize: string,\r\n\ttitleColor: string\r\n}\r\n\r\nconst hotelsDesignDic: { [key: string]: designProps } = {\r\n\t['default']: {\r\n\t\ttitleSize: '1em',\r\n\t\ttitleColor: 'black'\r\n\t},\r\n\t['hilton']: {\r\n\t\ttitleSize: '1em',\r\n\t\ttitleColor: 'pink'\r\n\t},\r\n\t['royal']: {\r\n\t\ttitleSize: '0.8em',\r\n\t\ttitleColor: 'green'\r\n\t}\r\n};\r\n\r\ntype Props = {\r\n\thotel?: string\r\n}\r\n\r\n/*global google*/\r\n// declare var google: any;\r\n\r\n// https://developers.google.com/maps/documentation/javascript/places\r\n// The Places service is a self-contained library, separate from the main Maps JavaScript API code. \r\n// To use the functionality contained within this library, you must first load it using the libraries parameter in the Maps API bootstrap URL:\r\n\r\nconst googleKey = 'AIzaSyBPWFwHrsgzYw36bl-ecghaFEqNuRuGDUg'\r\nconst googleScript = `https://maps.googleapis.com/maps/api/js?key=${googleKey}&libraries=places&callback=initMap`\r\n\r\nconst Home = (Props: Props) => {\r\n\r\n\t// let request = {\r\n\t// \tlocation: new google.maps.LatLng(52.48, -1.89),\r\n\t// \tradius: '500',\r\n\t// \ttypes: ['attractions']\r\n\t// };\r\n\r\n\t// var container = document.getElementById('results');\r\n\r\n\t// var service = new google.maps.places.PlacesService(container);\r\n\t// service.nearbySearch(request, callback);\r\n\r\n\t// function callback(results, status) {\r\n\r\n\t// \tif (status == google.maps.places.PlacesServiceStatus.OK) {\r\n\t// \t\tfor (var i = 0; i < results.length; i++) {\r\n\t// \t\t\tcontainer.innerHTML += results[i].name + '<br />';\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\t// ___________________________________________________________________________\r\n\tlet resultsData\r\n\tlet googleURL = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=32.0715658,34.772792&radius=1500&type=bars&key=AIzaSyBPWFwHrsgzYw36bl-ecghaFEqNuRuGDUg'\r\n\t// TO OVERCOME CORS ERROR using some tool---> https://proxyurl/googleURL \r\n\tconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n\tfetch(proxyurl + googleURL) \r\n\t\t.then(response => response.json())\r\n\t\t.then(data => resultsData = data['results'])\r\n\r\n\tconst attractionsData: attr[] = require('../data/attractions_museums_tlv.json')\r\n\t// const resultsData: attrResult[] = require('../data/resultsFromAPI.json')['results']\r\n\r\n\r\n\tconst chosenHotel = Props.hotel ? Props.hotel : 'default'\r\n\r\n\treturn <>\r\n\t\t<div style={{ textAlign: 'center', padding: '2em', fontFamily: 'Monospace' }}>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>Bridgify</title>\r\n\t\t\t\t<script defer src={googleScript} />\r\n\t\t\t</Head>\r\n\t\t\t<h1 style={{ color: 'purple', paddingBottom: '0.5em', fontSize: '3em' }}>Bridgify!</h1>\r\n\t\t\t<div style={{ placeContent: 'center', display: 'flex', flexWrap: 'wrap' }}>\r\n\t\t\t\t{resultsData.map((attr,index) => {\r\n\t\t\t\t\tconsole.log(index);\r\n\t\t\t\t\treturn <Attraction\r\n\t\t\t\t\t\tkey={attr.place_id}\r\n\t\t\t\t\t\tname={attr.name}\r\n\t\t\t\t\t\tnumber_of_reviews={attr.user_ratings_total}\r\n\t\t\t\t\t\trating={attr.rating}\r\n\t\t\t\t\t\ttags={attr.types}\r\n\t\t\t\t\t\timgUrl={attr.photos ? attr.photos[0]? attr.photos[0].photo_reference : null:null}\r\n\t\t\t\t\t\ttitleSize={hotelsDesignDic[chosenHotel].titleSize}\r\n\t\t\t\t\t\ttitleColor={hotelsDesignDic[chosenHotel].titleColor}\r\n\t\t\t\t\t></Attraction>\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</>\r\n}\r\n\t\t\t\t\t\t\t// return <>\r\n\t\t\t\t\t\t\t// \t<div style={{ textAlign: 'center', padding: '2em', fontFamily: 'Monospace' }}>\r\n\t\t\t\t\t\t\t// \t\t<Head>\r\n\t\t\t\t\t\t\t// \t\t\t<title>Bridgify</title>\r\n\t\t\t\t\t\t\t// \t\t\t<script defer src={googleScript}/>\r\n\t\t\t\t\t\t\t// \t\t</Head>\r\n\t\t\t\t\t\t\t// \t\t\t<h1 style={{ color: 'purple', paddingBottom: '0.5em', fontSize: '3em' }}>Bridgify!</h1>\r\n\t// \t\t\t<div style={{ placeContent: 'center', display: 'flex', flexWrap: 'wrap' }}>\r\n\t// \t\t\t\t{attractionsData.map(attr =>\r\n\t// \t\t\t\t\t<Attraction\r\n\t// \t\t\t\t\t\tkey={attr.id}\r\n\t// \t\t\t\t\t\tname={attr.name}\r\n\t// \t\t\t\t\t\tnumber_of_reviews={attr.number_of_reviews}\r\n\t// \t\t\t\t\t\trating={attr.rating}\r\n\t// \t\t\t\t\t\ttags={attr.tags}\r\n\t// \t\t\t\t\t\timgUrl={attr.main_photo_url}\r\n\t// \t\t\t\t\t\ttitleSize={hotelsDesignDic[chosenHotel].titleSize}\r\n\t// \t\t\t\t\t\ttitleColor={hotelsDesignDic[chosenHotel].titleColor}\r\n\t// \t\t\t\t\t></Attraction>)}\r\n\t// \t\t\t</div>\r\n\t// \t</div>\r\n\t// </>\r\n\r\n\r\nexport default Home\r\n\r\n\t// __=---------------------------------------------------------------------------------\r\n\r\n\t// Google Places search API call\r\n\t// https://stackoverflow.com/questions/37874018/retrieve-points-of-interests-attractions-tourist-places-of-a-place-country-usi\r\n\t// https://maps.googleapis.com/maps/api/place/textsearch/json?query=new+york+city+point+of+interest&language=en&key=AIzaSyATrA8jcd0kjYz7cv-hjACyq10r3MMhe7A\r\n\r\n\r\n\t// __=---------------------------------------------------------------------------------\r\n\r\n\t// example of more readable in-line styles using objects\r\n\t// const inlineStylesWithObject :React.CSSProperties = { placeContent: 'center', display: 'flex', flexWrap: 'wrap' }\r\n\r\n\t// __=---------------------------------------------------------------------------------\r\n\r\n\t// with css modules styles\r\n\t// <div className={styles.body}>\r\n\t// \t\t<h1 className={styles.mainTitle}>Bridgify!</h1>\r\n\t// \t\t<Link href=\"/attractions/ski\"><a> Go Ski!</a></Link>\r\n\r\n\t// \t\t{/* Using bootstrap card's attributes, while sending the following props */}\r\n\t// \t\t<CardGroup className={styles.cardGroup}>\r\n\t// \t\t\t{attractionsData.map(attr =>\r\n\t// \t\t\t\t<Attraction\r\n\t// \t\t\t\t\tkey={attr.id}\r\n\t// \t\t\t\t\tname={attr.name}\r\n\t// \t\t\t\t\tnumber_of_reviews={attr.number_of_reviews}\r\n\t// \t\t\t\t\trating={attr.rating}\r\n\t// \t\t\t\t\ttags={attr.tags}\r\n\t// \t\t\t\t\timgUrl={attr.main_photo_url}\r\n\t// \t\t\t\t></Attraction>)}\r\n\t// \t\t</CardGroup>\r\n\t// \t</div>\r\n\r\n"]},"metadata":{},"sourceType":"module"}