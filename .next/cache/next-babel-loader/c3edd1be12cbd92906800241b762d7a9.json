{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gilad\\\\Desktop\\\\Bridgify\\\\BridgifyAsg\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\n//----->react & next\nimport React from 'react';\nimport Head from \"next/head\"; //----->in-app components & styles\n\nimport AttractionCard from '../components/AttractionCard';\nimport { fetchAttractions } from '../services/webapi';\n//Optional Design Feature: create a specific design for each hotel/city using dictionary\nconst hotelsDesignDic = {\n  ['default']: {\n    titleSize: '1em',\n    titleColor: 'black'\n  },\n  ['london']: {\n    titleSize: '1em',\n    titleColor: 'pink'\n  },\n  ['lisbon']: {\n    titleSize: '0.8em',\n    titleColor: 'green'\n  }\n};\nconst googleKey = 'AIzaSyBPWFwHrsgzYw36bl-ecghaFEqNuRuGDUg';\nconst googleURL = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?`; //Create params sending the  object to URLSearchParams generator\n\nconst params = new URLSearchParams({\n  location: '38.7198852,-9.1402976',\n  radius: '1500',\n  keyword: 'attraction',\n  key: googleKey\n}).toString(); // getServerSideProps (Server-side Rendering): Fetches data on each request, to get the most updated attractions\n\nexport const getServerSideProps = async () => {\n  const attractions = fetchAttractions(params); // 'Home' component will receive attractions as a prop by returning it\n\n  console.log(attractions);\n  return {\n    props: {\n      attractions\n    }\n  };\n};\n\nconst Home = ({\n  attractions,\n  hotel\n}) => {\n  const chosenHotel = hotel ? hotel : 'default';\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '2em',\n      fontFamily: 'Monospace'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, \"Bridgify\")), __jsx(\"h1\", {\n    style: {\n      color: 'purple',\n      paddingBottom: '0.5em',\n      fontSize: '3em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, \"Bridgify!\"), __jsx(\"div\", {\n    style: {\n      placeContent: 'center',\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }, attractions.map(attr => {\n    return __jsx(AttractionCard, {\n      key: attr.place_id,\n      name: attr.name,\n      number_of_reviews: attr.user_ratings_total,\n      rating: attr.rating,\n      tags: attr.types,\n      photoRef: attr.photos ? attr.photos[0] ? attr.photos[0].photo_reference : null : null //handling undefined properties\n      ,\n      titleSize: hotelsDesignDic[chosenHotel].titleSize,\n      titleColor: hotelsDesignDic[chosenHotel].titleColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    });\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/gilad/Desktop/Bridgify/BridgifyAsg/pages/index.tsx"],"names":["React","Head","AttractionCard","fetchAttractions","hotelsDesignDic","titleSize","titleColor","googleKey","googleURL","params","URLSearchParams","location","radius","keyword","key","toString","getServerSideProps","attractions","console","log","props","Home","hotel","chosenHotel","textAlign","padding","fontFamily","color","paddingBottom","fontSize","placeContent","display","flexWrap","map","attr","place_id","name","user_ratings_total","rating","types","photos","photo_reference"],"mappings":"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","sourcesContent":["//----->react & next\r\nimport React from 'react'\r\nimport Head from \"next/head\"\r\n//----->in-app components & styles\r\nimport AttractionCard from '../components/AttractionCard'\r\nimport { Attraction } from '../interfaces/'\r\nimport { GetServerSideProps } from 'next'\r\nimport {fetchAttractions} from '../services/webapi'\r\n\r\ntype designProps = {\r\n\ttitleSize: string,\r\n\ttitleColor: string\r\n}\r\n\r\n//Optional Design Feature: create a specific design for each hotel/city using dictionary\r\nconst hotelsDesignDic: { [key: string]: designProps } = {\r\n\t['default']: {\r\n\t\ttitleSize: '1em',\r\n\t\ttitleColor: 'black'\r\n\t},\r\n\t['london']: {\r\n\t\ttitleSize: '1em',\r\n\t\ttitleColor: 'pink'\r\n\t},\r\n\t['lisbon']: {\r\n\t\ttitleSize: '0.8em',\r\n\t\ttitleColor: 'green'\r\n\t}\r\n};\r\n\r\n\r\n\r\nconst googleKey = 'AIzaSyBPWFwHrsgzYw36bl-ecghaFEqNuRuGDUg'\r\nconst googleURL = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?`\r\n\r\n//Create params sending the  object to URLSearchParams generator\r\nconst params = new URLSearchParams({\r\n\tlocation: '38.7198852,-9.1402976',\r\n\tradius: '1500',\r\n\tkeyword: 'attraction',\r\n\tkey: googleKey\r\n}).toString()\r\n\r\n\r\n// getServerSideProps (Server-side Rendering): Fetches data on each request, to get the most updated attractions\r\nexport const getServerSideProps: GetServerSideProps = async () => {\r\n\tconst attractions = fetchAttractions(params)\r\n\t// 'Home' component will receive attractions as a prop by returning it\r\n\tconsole.log(attractions);\r\n\t\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tattractions\r\n\t\t}\r\n\t}\r\n}\r\n\r\ntype Props = {\r\n\thotel?: string\r\n\tattractions?: any\r\n}\r\n\r\nconst Home = ({ attractions, hotel }: Props) => {\r\n\tconst chosenHotel = hotel ? hotel : 'default'\r\n\treturn <>\r\n\t\t<div style={{ textAlign: 'center', padding: '2em', fontFamily: 'Monospace' }}>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>Bridgify</title>\r\n\t\t\t</Head>\r\n\t\t\t<h1 style={{ color: 'purple', paddingBottom: '0.5em', fontSize: '3em' }}>Bridgify!</h1>\r\n\t\t\t<div style={{ placeContent: 'center', display: 'flex', flexWrap: 'wrap' }}>\r\n\t\t\t\t{attractions.map((attr) => {\r\n\t\t\t\t\treturn <AttractionCard\r\n\t\t\t\t\t\tkey={attr.place_id}\r\n\t\t\t\t\t\tname={attr.name}\r\n\t\t\t\t\t\tnumber_of_reviews={attr.user_ratings_total}\r\n\t\t\t\t\t\trating={attr.rating}\r\n\t\t\t\t\t\ttags={attr.types}\r\n\t\t\t\t\t\tphotoRef={attr.photos ? attr.photos[0] ? attr.photos[0].photo_reference : null : null} //handling undefined properties\r\n\t\t\t\t\t\ttitleSize={hotelsDesignDic[chosenHotel].titleSize}\r\n\t\t\t\t\t\ttitleColor={hotelsDesignDic[chosenHotel].titleColor}\r\n\t\t\t\t\t></AttractionCard>\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</>\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}